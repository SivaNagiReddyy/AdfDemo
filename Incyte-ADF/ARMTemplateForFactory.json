{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Incyte-ADF"
		},
		"ADLS_Connection_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_Connection'"
		},
		"AzureSqlDatabase_NewConnection_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase_NewConnection'"
		},
		"AzureSqlDatabase_connection_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase_connection'"
		},
		"StorageLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'StorageLinkedService'"
		},
		"ADLS_Connection_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://incyteadls.dfs.core.windows.net/"
		},
		"AzureSqlDatabase_NewConnection_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "incyteserver.database.windows.net"
		},
		"AzureSqlDatabase_NewConnection_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "IncyteDB"
		},
		"AzureSqlDatabase_NewConnection_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "incyteadmin"
		},
		"AzureSqlDatabase_connection_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "incyteserver.database.windows.net"
		},
		"AzureSqlDatabase_connection_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "IncyteDB"
		},
		"AzureSqlDatabase_connection_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "incyteadmin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_To_AzureDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ADLS_To_DB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Customer_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Customer_Table",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Customers"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-28T10:22:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Customer_data')]",
				"[concat(variables('factoryId'), '/datasets/Customer_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FilterActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FileNameFilter",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.OutputFolderNames",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item(),'f')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FileNameFilter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FileNameFilter').output.Value\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SourceData",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationData",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"OutputFolderNames": {
						"type": "array",
						"defaultValue": [
							"f1",
							"f2",
							"f3",
							"f4",
							"f5",
							"h1",
							"h2",
							"h3"
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-28T02:20:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceData')]",
				"[concat(variables('factoryId'), '/datasets/DestinationData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestDemo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UntilActivityDemo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UntilActivity",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('FileExists'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "FileMetaData",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "SourceData",
											"type": "DatasetReference",
											"parameters": {}
										},
										"fieldList": [
											"exists",
											"itemName"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "SetVariableValue",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "FileMetaData",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileExists",
										"value": true
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "UntilActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceData",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationData",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"FileExists": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-28T02:20:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceData')]",
				"[concat(variables('factoryId'), '/datasets/DestinationData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customer_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_connection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customer_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_Connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Customers.csv",
						"fileSystem": "inputfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Customer_id",
						"type": "String"
					},
					{
						"name": "Customer_name",
						"type": "String"
					},
					{
						"name": "Customer_email",
						"type": "String"
					},
					{
						"name": "Customer_address",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_Connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataflowOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "dataflowoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "outputfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Customer_id",
						"type": "String"
					},
					{
						"name": "Customer_name",
						"type": "String"
					},
					{
						"name": "Customer_email",
						"type": "String"
					},
					{
						"name": "Customer_address",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmpDatabaseSourceData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "empDatabase.csv",
						"container": "dataflowinput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmployeeDatabase')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_NewConnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "gender",
						"type": "varchar"
					},
					{
						"name": "country",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_NewConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "cricsample.csv",
						"container": "inputfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Customer_id",
						"type": "String"
					},
					{
						"name": "Customer_name",
						"type": "String"
					},
					{
						"name": "Customer_email",
						"type": "String"
					},
					{
						"name": "Customer_address",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/departmentdata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "departments.csv",
						"container": "dataflowinput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DEPARTMENT_ID",
						"type": "String"
					},
					{
						"name": "DEPARTMENT_NAME",
						"type": "String"
					},
					{
						"name": "MANAGER_ID",
						"type": "String"
					},
					{
						"name": "LOCATION_ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/employee_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "employees.csv",
						"container": "dataflowinput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EMPLOYEE_ID",
						"type": "String"
					},
					{
						"name": "FIRST_NAME",
						"type": "String"
					},
					{
						"name": "LAST_NAME",
						"type": "String"
					},
					{
						"name": "EMAIL",
						"type": "String"
					},
					{
						"name": "PHONE_NUMBER",
						"type": "String"
					},
					{
						"name": "HIRE_DATE",
						"type": "String"
					},
					{
						"name": "JOB_ID",
						"type": "String"
					},
					{
						"name": "SALARY",
						"type": "String"
					},
					{
						"name": "COMMISSION_PCT",
						"type": "String"
					},
					{
						"name": "MANAGER_ID",
						"type": "String"
					},
					{
						"name": "DEPARTMENT_ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_Connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to Azure data lake storage",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_Connection_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_Connection_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_NewConnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase_NewConnection_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase_NewConnection_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"hostNameInCertificate": "",
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase_NewConnection_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase_NewConnection_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase_connection_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase_connection_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"hostNameInCertificate": "",
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase_connection_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase_connection_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/StorageLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "we are trying to establish the connection with incyteadls container",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('StorageLinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowTransformation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "employee_data",
								"type": "DatasetReference"
							},
							"name": "Employee"
						},
						{
							"dataset": {
								"referenceName": "departmentdata",
								"type": "DatasetReference"
							},
							"name": "Department"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DestinationData",
								"type": "DatasetReference"
							},
							"name": "DestinationData"
						}
					],
					"transformations": [
						{
							"name": "MergedData"
						},
						{
							"name": "DepartmentCount"
						},
						{
							"name": "DerivedColumn"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EMPLOYEE_ID as string,",
						"          FIRST_NAME as string,",
						"          LAST_NAME as string,",
						"          EMAIL as string,",
						"          PHONE_NUMBER as string,",
						"          HIRE_DATE as string,",
						"          JOB_ID as string,",
						"          SALARY as string,",
						"          COMMISSION_PCT as string,",
						"          MANAGER_ID as string,",
						"          DEPARTMENT_ID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Employee",
						"source(output(",
						"          DEPARTMENT_ID as string,",
						"          DEPARTMENT_NAME as string,",
						"          MANAGER_ID as string,",
						"          LOCATION_ID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Department",
						"Employee, Department join(Employee@DEPARTMENT_ID == Department@DEPARTMENT_ID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> MergedData",
						"MergedData aggregate(groupBy(DEPARTMENT_NAME),",
						"     EMPLOYEE_ID = count(EMPLOYEE_ID)) ~> DepartmentCount",
						"DepartmentCount derive(DEPARTMENT_NAME = upper(DEPARTMENT_NAME)) ~> DerivedColumn",
						"DerivedColumn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Customer_id as string,",
						"          Customer_name as string,",
						"          Customer_email as string,",
						"          Customer_address as string",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DestinationData"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/employee_data')]",
				"[concat(variables('factoryId'), '/datasets/departmentdata')]",
				"[concat(variables('factoryId'), '/datasets/DestinationData')]"
			]
		}
	]
}